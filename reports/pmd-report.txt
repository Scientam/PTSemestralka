src/DataGeneration.java:11:	All classes and interfaces must belong to a named package
src/DataGeneration.java:11:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/DataGeneration.java:11:	headerCommentRequirement Required
src/DataGeneration.java:18:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/DataGeneration.java:18:	Field neighbour has the same name as a method
src/DataGeneration.java:18:	fieldCommentRequirement Required
src/DataGeneration.java:29:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/DataGeneration.java:29:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/DataGeneration.java:29:	Parameter 'entitiesV' is not assigned and could be declared final
src/DataGeneration.java:29:	Parameter 'factoriesCount' is not assigned and could be declared final
src/DataGeneration.java:29:	Parameter 'neighbourCountF' is not assigned and could be declared final
src/DataGeneration.java:29:	Parameter 'planetsCount' is not assigned and could be declared final
src/DataGeneration.java:32:	Comment is too large: Line too long
src/DataGeneration.java:35:	Avoid instantiating new objects inside loops
src/DataGeneration.java:40:	Comment is too large: Line too long
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:41:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:45:	Comment is too large: Line too long
src/DataGeneration.java:52:	Comment is too large: Too many lines
src/DataGeneration.java:61:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/DataGeneration.java:61:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/DataGeneration.java:61:	Parameter 'entitiesV' is not assigned and could be declared final
src/DataGeneration.java:61:	Parameter 'factoriesCount' is not assigned and could be declared final
src/DataGeneration.java:61:	Parameter 'neighbourCountP' is not assigned and could be declared final
src/DataGeneration.java:61:	Parameter 'planetsCount' is not assigned and could be declared final
src/DataGeneration.java:62:	Found 'DU'-anomaly for variable 'boundX' (lines '61'-'86').
src/DataGeneration.java:62:	Local variable 'boundX' could be declared final
src/DataGeneration.java:63:	Found 'DU'-anomaly for variable 'boundY' (lines '62'-'86').
src/DataGeneration.java:63:	Local variable 'boundY' could be declared final
src/DataGeneration.java:64:	Comment is too large: Line too long
src/DataGeneration.java:64:	Found 'DU'-anomaly for variable 'auxDist' (lines '63'-'86').
src/DataGeneration.java:64:	Local variable 'auxDist' could be declared final
src/DataGeneration.java:65:	Avoid variables with short names like rX
src/DataGeneration.java:65:	Found 'DU'-anomaly for variable 'rX' (lines '64'-'86').
src/DataGeneration.java:65:	Local variable 'rX' could be declared final
src/DataGeneration.java:66:	Avoid variables with short names like rY
src/DataGeneration.java:66:	Found 'DU'-anomaly for variable 'rY' (lines '65'-'86').
src/DataGeneration.java:66:	Local variable 'rY' could be declared final
src/DataGeneration.java:68:	Avoid variables with short names like i
src/DataGeneration.java:69:	Comment is too large: Line too long
src/DataGeneration.java:70:	Comment is too large: Line too long
src/DataGeneration.java:70:	Potential violation of Law of Demeter (object not created locally)
src/DataGeneration.java:71:	Potential violation of Law of Demeter (object not created locally)
src/DataGeneration.java:72:	Potential violation of Law of Demeter (object not created locally)
src/DataGeneration.java:73:	Comment is too large: Line too long
src/DataGeneration.java:74:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:74:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:74:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:74:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:74:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:74:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:74:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:74:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:75:	Potential violation of Law of Demeter (object not created locally)
src/DataGeneration.java:80:	Avoid using Literals in Conditional Statements
src/DataGeneration.java:80:	Comment is too large: Line too long
src/DataGeneration.java:81:	Avoid instantiating new objects inside loops
src/DataGeneration.java:81:	Avoid variables with short names like pl
src/DataGeneration.java:81:	Local variable 'pl' could be declared final
src/DataGeneration.java:94:	Returning 'distance' may expose an internal array.
src/DataGeneration.java:106:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/DataGeneration.java:106:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/DataGeneration.java:106:	Parameter 'entitiesV' is not assigned and could be declared final
src/DataGeneration.java:106:	Parameter 'factoriesCount' is not assigned and could be declared final
src/DataGeneration.java:106:	Parameter 'neighbourCountF' is not assigned and could be declared final
src/DataGeneration.java:106:	Parameter 'neighbourCountP' is not assigned and could be declared final
src/DataGeneration.java:108:	Avoid instantiating new objects inside loops
src/DataGeneration.java:113:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:114:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:123:	Avoid instantiating new objects inside loops
src/DataGeneration.java:124:	Comment is too large: Too many lines
src/DataGeneration.java:134:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:134:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:134:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:139:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:139:	Potential violation of Law of Demeter (method chain calls)
src/DataGeneration.java:139:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:8:	All classes and interfaces must belong to a named package
src/DrawMap.java:8:	Avoid short class names like Mapa
src/DrawMap.java:8:	headerCommentRequirement Required
src/DrawMap.java:15:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/DrawMap.java:15:	Use explicit scoping instead of the default package private level
src/DrawMap.java:17:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/DrawMap.java:17:	Use explicit scoping instead of the default package private level
src/DrawMap.java:18:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/DrawMap.java:18:	Use explicit scoping instead of the default package private level
src/DrawMap.java:18:	fieldCommentRequirement Required
src/DrawMap.java:19:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/DrawMap.java:19:	Use explicit scoping instead of the default package private level
src/DrawMap.java:19:	fieldCommentRequirement Required
src/DrawMap.java:21:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/DrawMap.java:21:	Avoid variables with short names like ar
src/DrawMap.java:21:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/DrawMap.java:21:	Use explicit scoping instead of the default package private level
src/DrawMap.java:22:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/DrawMap.java:22:	Use explicit scoping instead of the default package private level
src/DrawMap.java:22:	fieldCommentRequirement Required
src/DrawMap.java:32:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/DrawMap.java:32:	Avoid variables with short names like ar
src/DrawMap.java:32:	Consider using varargs for methods or constructors which take an array the last parameter.
src/DrawMap.java:32:	It is a good practice to call super() in a constructor
src/DrawMap.java:32:	Parameter 'ar' is not assigned and could be declared final
src/DrawMap.java:32:	Parameter 'factoriesCount' is not assigned and could be declared final
src/DrawMap.java:32:	Parameter 'neighbourCountF' is not assigned and could be declared final
src/DrawMap.java:32:	Parameter 'neighbourCountP' is not assigned and could be declared final
src/DrawMap.java:32:	Parameter 'planetsCount' is not assigned and could be declared final
src/DrawMap.java:32:	Parameter 'shortestPath' is not assigned and could be declared final
src/DrawMap.java:32:	The user-supplied array 'shortestPath' is stored directly.
src/DrawMap.java:51:	Avoid variables with short names like g
src/DrawMap.java:51:	Parameter 'g' is not assigned and could be declared final
src/DrawMap.java:60:	Avoid variables with short names like g2
src/DrawMap.java:60:	Parameter 'g2' is not assigned and could be declared final
src/DrawMap.java:61:	System.out.println is used
src/DrawMap.java:64:	Avoid instantiating new objects inside loops
src/DrawMap.java:64:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:64:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:69:	Avoid instantiating new objects inside loops
src/DrawMap.java:69:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:69:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:83:	Avoid variables with short names like id
src/DrawMap.java:83:	Local variable 'id' could be declared final
src/DrawMap.java:83:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:83:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:83:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:84:	Avoid instantiating new objects inside loops
src/DrawMap.java:84:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:84:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:84:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:84:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:89:	Avoid variables with short names like id
src/DrawMap.java:89:	Local variable 'id' could be declared final
src/DrawMap.java:89:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:89:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:89:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:90:	Avoid instantiating new objects inside loops
src/DrawMap.java:90:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:90:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:90:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:90:	Potential violation of Law of Demeter (method chain calls)
src/DrawMap.java:94:	Comment is too large: Too many lines
src/DrawMap.java:101:	Comment is too large: Line too long
src/DrawMap.java:102:	Comment is too large: Line too long
src/Factory.java:3:	All classes and interfaces must belong to a named package
src/Factory.java:3:	headerCommentRequirement Required
src/Factory.java:4:	Avoid unused private fields such as 'distance'.
src/Factory.java:4:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/Factory.java:4:	fieldCommentRequirement Required
src/Factory.java:10:	Avoid variables with short names like id
src/Factory.java:10:	Parameter 'color' is not assigned and could be declared final
src/Factory.java:10:	Parameter 'id' is not assigned and could be declared final
src/Factory.java:10:	Parameter 'neighbourCount' is not assigned and could be declared final
src/Factory.java:10:	Parameter 'xAxis' is not assigned and could be declared final
src/Factory.java:10:	Parameter 'yAxis' is not assigned and could be declared final
src/Graph.java:9:	All classes and interfaces must belong to a named package
src/Graph.java:9:	The class 'Graph' has a Modified Cyclomatic Complexity of 5 (Highest = 10).
src/Graph.java:9:	The class 'Graph' has a Standard Cyclomatic Complexity of 5 (Highest = 10).
src/Graph.java:12:	Possible unsafe assignment to a non-final static field in a constructor.
src/Graph.java:14:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Graph.java:16:	Possible unsafe assignment to a non-final static field in a constructor.
src/Graph.java:18:	Avoid unused private fields such as 'vertexCreated'.
src/Graph.java:18:	Avoid using redundant field initializer for 'vertexCreated'
src/Graph.java:18:	Private field 'vertexCreated' could be made final; it is only initialized in the declaration or constructor.
src/Graph.java:20:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Graph.java:20:	Private field 'connected' could be made final; it is only initialized in the declaration or constructor.
src/Graph.java:21:	Avoid unused private fields such as 'shortestPath'.
src/Graph.java:21:	fieldCommentRequirement Required
src/Graph.java:22:	Avoid variables with short names like p
src/Graph.java:22:	Use explicit scoping instead of the default package private level
src/Graph.java:22:	fieldCommentRequirement Required
src/Graph.java:29:	Parameter 'connected' is not assigned and could be declared final
src/Graph.java:29:	Parameter 'vertexCount' is not assigned and could be declared final
src/Graph.java:36:	Assigning an Object to null is a code smell.  Consider refactoring.
src/Graph.java:45:	Parameter 'key' is not assigned and could be declared final
src/Graph.java:46:	Found 'DD'-anomaly for variable 'pom' (lines '46'-'49').
src/Graph.java:49:	Found 'DD'-anomaly for variable 'pom' (lines '49'-'49').
src/Graph.java:60:	Parameter 'end' is not assigned and could be declared final
src/Graph.java:60:	Parameter 'start' is not assigned and could be declared final
src/Graph.java:66:	Avoid unnecessary comparisons in boolean expressions
src/Graph.java:66:	Deeply nested if..then statements are hard to read
src/Graph.java:66:	Deeply nested if..then statements are hard to read
src/Graph.java:79:	System.out.println is used
src/Graph.java:82:	Potential violation of Law of Demeter (method chain calls)
src/Graph.java:82:	Potential violation of Law of Demeter (method chain calls)
src/Graph.java:82:	System.out.print is used
src/Graph.java:84:	System.out.println is used
src/Graph.java:86:	System.out.println is used
src/Graph.java:97:	Avoid variables with short names like d
src/Graph.java:97:	Parameter 'd' is not assigned and could be declared final
src/Graph.java:97:	Parameter 'from' is not assigned and could be declared final
src/Graph.java:97:	The method 'doDijkstra' has a Modified Cyclomatic Complexity of 10.
src/Graph.java:97:	The method 'doDijkstra' has a Standard Cyclomatic Complexity of 10.
src/Graph.java:98:	Local variable 'set' could be declared final
src/Graph.java:99:	Potential violation of Law of Demeter (object not created locally)
src/Graph.java:101:	Found 'DD'-anomaly for variable 'closed' (lines '101'-'127').
src/Graph.java:102:	Found 'DD'-anomaly for variable 'distances' (lines '102'-'105').
src/Graph.java:104:	Avoid if (x != y) ..; else ..;
src/Graph.java:105:	Found 'DD'-anomaly for variable 'distances' (lines '105'-'105').
src/Graph.java:112:	Found 'DD'-anomaly for variable 'predecessors' (lines '112'-'113').
src/Graph.java:113:	Found 'DD'-anomaly for variable 'predecessors' (lines '113'-'137').
src/Graph.java:115:	Potential violation of Law of Demeter (object not created locally)
src/Graph.java:117:	Found 'DU'-anomaly for variable 'minDistance' (lines '117'-'145').
src/Graph.java:118:	Found 'DD'-anomaly for variable 'node' (lines '118'-'122').
src/Graph.java:119:	Local variable 'i' could be declared final
src/Graph.java:121:	Found 'DD'-anomaly for variable 'minDistance' (lines '121'-'117').
src/Graph.java:121:	Found 'DU'-anomaly for variable 'minDistance' (lines '121'-'145').
src/Graph.java:122:	Found 'DD'-anomaly for variable 'node' (lines '122'-'122').
src/Graph.java:126:	Potential violation of Law of Demeter (object not created locally)
src/Graph.java:127:	Found 'DU'-anomaly for variable 'closed' (lines '127'-'145').
src/Graph.java:133:	These nested if statements could be combined
src/Graph.java:133:	These nested if statements could be combined
src/Graph.java:135:	These nested if statements could be combined
src/Graph.java:135:	These nested if statements could be combined
src/Graph.java:137:	Found 'DD'-anomaly for variable 'predecessors' (lines '137'-'137').
src/Graph.java:138:	Potential violation of Law of Demeter (object not created locally)
src/Graph.java:152:	Avoid variables with short names like m
src/Graph.java:152:	Consider using varargs for methods or constructors which take an array the last parameter.
src/Graph.java:168:	Avoid variables with short names like m
src/Graph.java:168:	Consider using varargs for methods or constructors which take an array the last parameter.
src/Graph.java:168:	publicMethodCommentRequirement Required
src/Graph.java:183:	Returning 'p' may expose an internal array.
src/Graph.java:191:	Avoid variables with short names like d
src/Graph.java:191:	Consider using varargs for methods or constructors which take an array the last parameter.
src/Graph.java:191:	Parameter 'd' is not assigned and could be declared final
src/Graph.java:192:	Avoid variables with short names like p
src/Graph.java:192:	Found 'DD'-anomaly for variable 'p' (lines '192'-'196').
src/Graph.java:192:	Found 'DD'-anomaly for variable 'p' (lines '192'-'198').
src/Graph.java:195:	Avoid if (x != y) ..; else ..;
src/Graph.java:196:	Found 'DD'-anomaly for variable 'p' (lines '196'-'196').
src/Graph.java:196:	Found 'DD'-anomaly for variable 'p' (lines '196'-'198').
src/Graph.java:198:	Found 'DD'-anomaly for variable 'p' (lines '198'-'196').
src/Graph.java:198:	Found 'DD'-anomaly for variable 'p' (lines '198'-'198').
src/Graph.java:205:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/Graph.java:205:	Avoid variables with short names like fW
src/Graph.java:205:	Consider using varargs for methods or constructors which take an array the last parameter.
src/Graph.java:205:	Parameter 'fW' is not assigned and could be declared final
src/Graph.java:205:	publicMethodCommentRequirement Required
src/Graph.java:206:	Local variable 'seq' could be declared final
src/Graph.java:207:	Avoid variables with short names like to
src/Graph.java:207:	Use one line for each declaration, it enhances code readability.
src/Graph.java:213:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:3:	Avoid unused imports such as 'java.io.File'
src/Main.java:7:	Avoid unused imports such as 'java.lang.management.PlatformLoggingMXBean'
src/Main.java:10:	Avoid unused imports such as 'org.omg.Messaging.SyncScopeHelper'
src/Main.java:11:	All classes and interfaces must belong to a named package
src/Main.java:11:	Avoid short class names like Main
src/Main.java:11:	The class 'Main' has a Modified Cyclomatic Complexity of 10 (Highest = 17).
src/Main.java:11:	The class 'Main' has a Standard Cyclomatic Complexity of 10 (Highest = 17).
src/Main.java:11:	headerCommentRequirement Required
src/Main.java:13:	fieldCommentRequirement Required
src/Main.java:14:	Avoid unused private fields such as 'starshipID'.
src/Main.java:14:	fieldCommentRequirement Required
src/Main.java:16:	Avoid variables with short names like sc
src/Main.java:16:	Use explicit scoping instead of the default package private level
src/Main.java:16:	fieldCommentRequirement Required
src/Main.java:17:	Avoid variables with short names like r
src/Main.java:17:	Use explicit scoping instead of the default package private level
src/Main.java:17:	fieldCommentRequirement Required
src/Main.java:18:	Comment is too large: Line too long
src/Main.java:19:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/Main.java:19:	Use explicit scoping instead of the default package private level
src/Main.java:20:	Comment is too large: Line too long
src/Main.java:21:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/Main.java:21:	Use explicit scoping instead of the default package private level
src/Main.java:23:	Comment is too large: Line too long
src/Main.java:24:	Use explicit scoping instead of the default package private level
src/Main.java:26:	Use explicit scoping instead of the default package private level
src/Main.java:28:	Use explicit scoping instead of the default package private level
src/Main.java:30:	Use explicit scoping instead of the default package private level
src/Main.java:32:	Use explicit scoping instead of the default package private level
src/Main.java:34:	Use explicit scoping instead of the default package private level
src/Main.java:35:	Use explicit scoping instead of the default package private level
src/Main.java:35:	fieldCommentRequirement Required
src/Main.java:36:	Use explicit scoping instead of the default package private level
src/Main.java:36:	fieldCommentRequirement Required
src/Main.java:37:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/Main.java:37:	Use explicit scoping instead of the default package private level
src/Main.java:37:	fieldCommentRequirement Required
src/Main.java:38:	Comment is too large: Line too long
src/Main.java:39:	Use explicit scoping instead of the default package private level
src/Main.java:40:	Use explicit scoping instead of the default package private level
src/Main.java:40:	fieldCommentRequirement Required
src/Main.java:42:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/Main.java:42:	Use explicit scoping instead of the default package private level
src/Main.java:44:	Use explicit scoping instead of the default package private level
src/Main.java:46:	Consider using varargs for methods or constructors which take an array the last parameter.
src/Main.java:46:	Parameter 'args' is not assigned and could be declared final
src/Main.java:46:	The method 'main' has a Modified Cyclomatic Complexity of 17.
src/Main.java:46:	The method 'main' has a Standard Cyclomatic Complexity of 17.
src/Main.java:46:	publicMethodCommentRequirement Required
src/Main.java:51:	System.out.println is used
src/Main.java:53:	Avoid using Literals in Conditional Statements
src/Main.java:54:	System.out.println is used
src/Main.java:65:	Local variable 'bw1' could be declared final
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:68:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:69:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:72:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:75:	Local variable 'bw2' could be declared final
src/Main.java:78:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:78:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:78:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:78:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:78:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:80:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:82:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:85:	Local variable 'bw3' could be declared final
src/Main.java:89:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:89:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:89:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:89:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:89:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:89:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:89:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:93:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:93:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:93:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:93:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:93:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:93:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:93:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:96:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:98:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:107:	Local variable 'bw4' could be declared final
src/Main.java:111:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:111:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:111:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:113:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:115:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:118:	Local variable 'bw6' could be declared final
src/Main.java:122:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:122:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:122:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:124:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:126:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:128:	Comment is too large: Line too long
src/Main.java:139:	Comment is too large: Line too long
src/Main.java:144:	Comment is too large: Line too long
src/Main.java:146:	Found 'DU'-anomaly for variable 'bw5' (lines '150'-'231').
src/Main.java:146:	Local variable 'bw5' could be declared final
src/Main.java:148:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:149:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:151:	Avoid instantiating new objects inside loops
src/Main.java:151:	Avoid variables with short names like p
src/Main.java:151:	Local variable 'p' could be declared final
src/Main.java:151:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:151:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:151:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:151:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:151:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:152:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:152:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:152:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:152:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:152:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:154:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:154:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:154:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:154:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:155:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:157:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:160:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:161:	Avoid instantiating new objects inside loops
src/Main.java:161:	Avoid variables with short names like s
src/Main.java:161:	Local variable 's' could be declared final
src/Main.java:162:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:162:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:164:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:164:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:166:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:167:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:167:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:169:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:169:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:192:	Comment is too large: Line too long
src/Main.java:193:	Comment is too large: Line too long
src/Main.java:197:	Comment is too large: Line too long
src/Main.java:209:	Comment is too large: Too many lines
src/Main.java:224:	Comment is too large: Line too long
src/Main.java:226:	System.out.println is used
src/Main.java:229:	publicMethodCommentRequirement Required
src/Main.java:230:	Avoid variables with short names like br
src/Main.java:231:	Found 'DD'-anomaly for variable 'counter' (lines '235'-'241').
src/Main.java:235:	Found 'DU'-anomaly for variable 'radka' (lines '239'-'258').
src/Main.java:235:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:236:	Local variable 'parseLine' could be declared final
src/Main.java:236:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:240:	Avoid instantiating new objects inside loops
src/Main.java:240:	Local variable 'centrala' could be declared final
src/Main.java:240:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:240:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:240:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:240:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:240:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:240:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:243:	Avoid instantiating new objects inside loops
src/Main.java:243:	Avoid variables with short names like pl
src/Main.java:243:	Local variable 'pl' could be declared final
src/Main.java:243:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:243:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:243:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:243:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:243:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:243:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:247:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:250:	Avoid printStackTrace(); use a logger call instead.
src/Main.java:250:	Potential violation of Law of Demeter (object not created locally)
src/Main.java:251:	Avoid empty catch blocks
src/Main.java:251:	Avoid empty catch blocks
src/Main.java:256:	publicMethodCommentRequirement Required
src/Main.java:257:	Avoid variables with short names like br
src/Main.java:259:	Found 'DU'-anomaly for variable 'counter' (lines '263'-'301').
src/Main.java:262:	Found 'DU'-anomaly for variable 'br2' (lines '266'-'301').
src/Main.java:265:	Found 'DU'-anomaly for variable 'radka' (lines '269'-'301').
src/Main.java:267:	Found 'DD'-anomaly for variable 'parseLine' (lines '271'-'271').
src/Main.java:267:	Found 'DU'-anomaly for variable 'parseLine' (lines '271'-'301').
src/Main.java:267:	Local variable 'parseLine' could be declared final
src/Main.java:268:	Found 'DD'-anomaly for variable 'parseLine2' (lines '272'-'272').
src/Main.java:268:	Found 'DU'-anomaly for variable 'parseLine2' (lines '272'-'301').
src/Main.java:268:	Local variable 'parseLine2' could be declared final
src/Main.java:274:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:275:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:276:	Avoid instantiating new objects inside loops
src/Main.java:276:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:276:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:283:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:284:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:285:	Avoid instantiating new objects inside loops
src/Main.java:285:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:285:	Potential violation of Law of Demeter (method chain calls)
src/Main.java:289:	Found 'DU'-anomaly for variable 'counter' (lines '293'-'301').
src/Main.java:293:	System.out.println is used
src/Main.java:295:	System.out.println is used
src/MyComparator.java:3:	All classes and interfaces must belong to a named package
src/MyComparator.java:3:	Each class should declare at least one constructor
src/MyComparator.java:3:	headerCommentRequirement Required
src/MyComparator.java:6:	Avoid variables with short names like n1
src/MyComparator.java:6:	Avoid variables with short names like n2
src/MyComparator.java:6:	Parameter 'n1' is not assigned and could be declared final
src/MyComparator.java:6:	Parameter 'n2' is not assigned and could be declared final
src/MyComparator.java:6:	publicMethodCommentRequirement Required
src/MyComparator.java:8:	A method should have only one exit point, and that should be the last statement in the method
src/MyComparator.java:10:	A method should have only one exit point, and that should be the last statement in the method
src/Neighbour.java:2:	All classes and interfaces must belong to a named package
src/Neighbour.java:2:	headerCommentRequirement Required
src/Neighbour.java:4:	fieldCommentRequirement Required
src/Neighbour.java:5:	fieldCommentRequirement Required
src/Neighbour.java:7:	Parameter 'dist' is not assigned and could be declared final
src/Neighbour.java:7:	Parameter 'index' is not assigned and could be declared final
src/Neighbour.java:12:	publicMethodCommentRequirement Required
src/Neighbour.java:16:	Parameter 'index' is not assigned and could be declared final
src/Neighbour.java:16:	publicMethodCommentRequirement Required
src/Neighbour.java:20:	publicMethodCommentRequirement Required
src/Neighbour.java:24:	Parameter 'dist' is not assigned and could be declared final
src/Neighbour.java:24:	publicMethodCommentRequirement Required
src/Neighbour.java:28:	Object clone() should be implemented with super.clone()
src/Neighbour.java:28:	clone() method should be implemented only if implementing Cloneable interface
src/Neighbour.java:28:	clone() method should throw CloneNotSupportedException
src/Neighbour.java:28:	publicMethodCommentRequirement Required
src/Path.java:3:	All classes and interfaces must belong to a named package
src/Path.java:3:	Avoid short class names like Path
src/Path.java:3:	headerCommentRequirement Required
src/Path.java:6:	Avoid unused private fields such as 'dangerous'.
src/Path.java:6:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Path.java:7:	Avoid variables with short names like r
src/Path.java:7:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Path.java:7:	Private field 'r' could be made final; it is only initialized in the declaration or constructor.
src/Path.java:7:	fieldCommentRequirement Required
src/Path.java:8:	Avoid unused private fields such as 'from'.
src/Path.java:8:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Path.java:8:	Perhaps 'from' could be replaced by a local variable.
src/Path.java:8:	Private field 'from' could be made final; it is only initialized in the declaration or constructor.
src/Path.java:8:	fieldCommentRequirement Required
src/Path.java:9:	Avoid unused private fields such as 'to'.
src/Path.java:9:	Avoid variables with short names like to
src/Path.java:9:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Path.java:9:	Perhaps 'to' could be replaced by a local variable.
src/Path.java:9:	Private field 'to' could be made final; it is only initialized in the declaration or constructor.
src/Path.java:9:	fieldCommentRequirement Required
src/Path.java:10:	Avoid unused private fields such as 'distance'.
src/Path.java:10:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Path.java:10:	Perhaps 'distance' could be replaced by a local variable.
src/Path.java:10:	Private field 'distance' could be made final; it is only initialized in the declaration or constructor.
src/Path.java:10:	fieldCommentRequirement Required
src/Path.java:17:	Avoid unused constructor parameters such as 'dangerous'.
src/Path.java:17:	Avoid variables with short names like to
src/Path.java:17:	Parameter 'dangerous' is not assigned and could be declared final
src/Path.java:17:	Parameter 'distance' is not assigned and could be declared final
src/Path.java:17:	Parameter 'from' is not assigned and could be declared final
src/Path.java:17:	Parameter 'to' is not assigned and could be declared final
src/Path.java:21:	Local variable 'danger' could be declared final
src/Path.java:22:	Avoid using Literals in Conditional Statements
src/Planet.java:1:	Avoid unused imports such as 'java.util.ArrayList'
src/Planet.java:3:	All classes and interfaces must belong to a named package
src/Planet.java:3:	headerCommentRequirement Required
src/Planet.java:5:	Comment is too large: Line too long
src/Planet.java:6:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Planet.java:8:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Planet.java:10:	Field drugProduction has the same name as a method
src/Planet.java:10:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Planet.java:12:	Field order has the same name as a method
src/Planet.java:13:	Avoid variables with short names like id
src/Planet.java:13:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Planet.java:13:	Private field 'id' could be made final; it is only initialized in the declaration or constructor.
src/Planet.java:13:	fieldCommentRequirement Required
src/Planet.java:17:	Comment is too large: Line too long
src/Planet.java:18:	Comment is too large: Line too long
src/Planet.java:24:	Avoid variables with short names like id
src/Planet.java:24:	Parameter 'color' is not assigned and could be declared final
src/Planet.java:24:	Parameter 'id' is not assigned and could be declared final
src/Planet.java:24:	Parameter 'neighbourCount' is not assigned and could be declared final
src/Planet.java:24:	Parameter 'xAxis' is not assigned and could be declared final
src/Planet.java:24:	Parameter 'yAxis' is not assigned and could be declared final
src/Planet.java:28:	Local variable 'population' could be declared final
src/Planet.java:33:	Comment is too large: Line too long
src/Planet.java:34:	Comment is too large: Line too long
src/Planet.java:38:	Parameter 'populCount' is not assigned and could be declared final
src/Planet.java:39:	Local variable 'percentage' could be declared final
src/Planet.java:40:	Local variable 'drugs' could be declared final
src/Planet.java:47:	Comment is too large: Line too long
src/Planet.java:51:	Parameter 'populCount' is not assigned and could be declared final
src/Planet.java:63:	Parameter 'populCount' is not assigned and could be declared final
src/Planet.java:64:	Avoid using Literals in Conditional Statements
src/Planet.java:70:	Parameter 'drugProduction' is not assigned and could be declared final
src/Planet.java:70:	Parameter 'populCount' is not assigned and could be declared final
src/Planet.java:70:	publicMethodCommentRequirement Required
src/Planet.java:75:	publicMethodCommentRequirement Required
src/Planet.java:79:	publicMethodCommentRequirement Required
src/Planet.java:83:	publicMethodCommentRequirement Required
src/Planet.java:87:	Parameter 'order' is not assigned and could be declared final
src/Planet.java:87:	publicMethodCommentRequirement Required
src/Starship.java:1:	All classes and interfaces must belong to a named package
src/Starship.java:1:	headerCommentRequirement Required
src/Starship.java:4:	Avoid variables with short names like id
src/Starship.java:4:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Starship.java:4:	Private field 'id' could be made final; it is only initialized in the declaration or constructor.
src/Starship.java:6:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Starship.java:6:	Private field 'velocity' could be made final; it is only initialized in the declaration or constructor.
src/Starship.java:8:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Starship.java:10:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Starship.java:10:	Private field 'numF' could be made final; it is only initialized in the declaration or constructor.
src/Starship.java:23:	Avoid variables with short names like id
src/Starship.java:23:	Parameter 'capacity' is not assigned and could be declared final
src/Starship.java:23:	Parameter 'id' is not assigned and could be declared final
src/Starship.java:23:	Parameter 'numF' is not assigned and could be declared final
src/Starship.java:23:	Parameter 'velocity' is not assigned and could be declared final
src/Starship.java:36:	Parameter 'targetP' is not assigned and could be declared final
src/Starship.java:44:	Parameter 'isInUse' is not assigned and could be declared final
src/Starship.java:48:	Parameter 'capacity' is not assigned and could be declared final
src/Starship.java:48:	publicMethodCommentRequirement Required
src/Starship.java:97:	A getX() method which returns a boolean should be named isX()
src/Vertex.java:8:	All classes and interfaces must belong to a named package
src/Vertex.java:11:	Avoid variables with short names like r
src/Vertex.java:11:	Use explicit scoping instead of the default package private level
src/Vertex.java:11:	fieldCommentRequirement Required
src/Vertex.java:13:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Vertex.java:15:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Vertex.java:17:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Vertex.java:19:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Vertex.java:21:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Vertex.java:26:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/Vertex.java:26:	fieldCommentRequirement Required
src/Vertex.java:34:	Parameter 'color' is not assigned and could be declared final
src/Vertex.java:34:	Parameter 'key' is not assigned and could be declared final
src/Vertex.java:34:	Parameter 'neighbourCount' is not assigned and could be declared final
src/Vertex.java:34:	Parameter 'xAxis' is not assigned and could be declared final
src/Vertex.java:34:	Parameter 'yAxis' is not assigned and could be declared final
src/Vertex.java:45:	publicMethodCommentRequirement Required
src/Vertex.java:49:	publicMethodCommentRequirement Required
src/Vertex.java:53:	publicMethodCommentRequirement Required
src/Vertex.java:57:	publicMethodCommentRequirement Required
src/Vertex.java:61:	publicMethodCommentRequirement Required
src/Vertex.java:70:	System.out.print is used
